ENV_VARS = {
    central:   '192.168.150.100',
    central_2: '172.24.4.10',
    worker1:   '192.168.150.101',
    worker1_2: '172.24.4.11',
    # OVS_GIT_BRANCH: '04d140664a272fdbdd5352162ea9719b9c77cafe',
    # OVN_GIT_BRANCH: '7dad8ad7f9676c99fa9981a6c114d7707763288c',
}

RAM = 16000
VCPUS = 6

Vagrant.configure(2) do |config|

    vm_memory = ENV['VM_MEMORY'] || RAM
    vm_cpus = ENV['VM_CPUS'] || VCPUS

    config.vm.provider 'libvirt' do |lb|
        lb.nested = true
        lb.memory = vm_memory
        lb.cpus = vm_cpus
        lb.suspend_mode = 'managedsave'
        lb.storage_pool_name = 'default'
        lb.qemu_use_session = false
    end

    # VirtualBox specific configuration
    config.vm.provider "virtualbox" do |vb|
        vb.memory = vm_memory
        vb.cpus = vm_cpus
        vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
        vb.customize ["modifyvm", :id, "--nictype2", "virtio"]
        vb.customize ["modifyvm", :id, "--nictype3", "virtio"]
    end

    config.ssh.forward_agent = true
    config.vm.hostname = "ovnhost"
    config.vm.box = "centos/8"
#    config.vm.box = "generic/ubuntu1804"
    config.vm.synced_folder './', '/vagrant', type: 'rsync'
    config.vm.synced_folder '../utils', '/vagrant/utils', type: 'rsync'

    if ENV['OVS_DIR']
        config.vm.synced_folder ENV['OVS_DIR'], '/home/vagrant/ovs', type: 'rsync'
    end

     # central as controller node (northd/southd)
    config.vm.define 'central' do |central|
        central.vm.network 'private_network', ip: ENV_VARS[:central]
        central.vm.network 'private_network', ip: ENV_VARS[:central_2]
        central.vm.hostname = 'central'
        central.vm.provision :shell do |shell|
            shell.privileged = false
            shell.path = 'central.sh'
            shell.env = ENV_VARS
        end
    end

    config.vm.define 'worker1' do |worker1|
        worker1.vm.network 'private_network', ip: ENV_VARS[:worker1]
        worker1.vm.network 'private_network', ip: ENV_VARS[:worker1_2]
        worker1.vm.hostname = 'worker1'
        worker1.vm.provision :shell do |shell|
            shell.privileged = false
            shell.path = 'worker-1.sh'
            shell.env = ENV_VARS
        end
    end

end
